ceate database colleage;
use colleage;


CREATE TABLE college (
	student_id Ingeter primary key not null ,
	name varchar(10) not null ,
	year SMALLINT default "1" not null ,
	dept_no Integer not null ,
	major varchar(20) 
);

create table department (
	dept_no integer primary key auto_increment not null,
	dept_name varchar(20) not null unique,
	office varchar(20) not null,
	office_tel varchar(13)
);

alter table student modify column major varchar(40);
alter table student add column gender varchar(10);

alter table department modify column dept_name varchar(40);
alter table department modify column office varchar(30);

show columns from student;
show tables;

alter table student drop column gender;

insert into student values (20070002, 'James Bond', 3, 4, 'Business Administration'); 
insert into student values (20060001, 'Queenie', 4, 4, 'Business Administration');
insert into student values (20030001, 'Reonardo', 4, 2, 'Electronic Engineering');
insert into student values (20040003, 'Julia', 3, 2, 'Electronic Engineering');
insert into student values (20060002, 'Roosevelt', 3, 1, 'Computer Science');
insert into student values (20100002, 'Fearne', 3, 4, 'Business Administration');
insert into student values (20110001, 'Chloe', 2, 1, 'Computer Science');
insert into student values (20080003, 'Amy', 4, 3, 'Law');
insert into student values (20040002, 'Selina', 4, 5, 'English Literature');
insert into student values (20070001, 'Ellen', 4, 4, 'Business Administration');
insert into student values (20100001, 'Kathy', 3, 4, 'Business Administration');
insert into student values (20110002, 'Lucy', 2, 2, 'Electronic Engineering');
insert into student values (20030002, 'Michelle', 5, 1, 'Computer Science');
insert into student values (20070003, 'April', 4, 3, 'Law');
insert into student values (20070005, 'Alicia', 2, 5, 'English Literature');
insert into student values (20100003, 'Yullia', 3, 1, 'Computer Science');
insert into student values (20070007, 'Ashlee', 2, 4, 'Business Administration');

insert into department values

INSERT INTO department (dept_name, office, office_tel)
VALUES ('Computer Science', 'Engineering building', '02-3290-0123');
INSERT INTO department (dept_name, office, office_tel)
VALUES ('Electronic Engineering', 'Engineering building', '02-3290-2345') ;
INSERT INTO department (dept_name, office, office_tel)
VALUES ('Law', 'Law building', '02-3290-7896') ;
INSERT INTO department (dept_name, office, office_tel)
VALUES ('Business Administration', 'Administration building', '02-3290-1112') ;
INSERT INTO department (dept_name, office, office_tel)
VALUES  ('English Literature', 'Literature building', '02-3290-4412');



update department set dept_name="Electronic and Electrical Engineering" where dept_name="Electronic engineering";

INSERT INTO department (dept_name, office, office_tel)
VALUES  ('Education', 'Education building', '02-3290-2347');

insert into student values(20130003, 'Chloe', 1, 1, 'Education');

delete from student where name = 'Michelle';
delete from student where name = 'Fearne';


----ex4
select * from student where major = 'Computer Science';
select student_id, year, majot from student;
select * from student where year = 3;
select * from student where year = 1 or year = 2;
SELECT * FROM student s JOIN department d ON s.dept_no=d.dept_no 
WHERE dept_name='Business Administration';


----ex5
select * from student where student_id like "2007%";
select * from student order by student_id;
select major from student group by major having avg(year) > 3;
select * from student where major="Business Administration" where student_id like "2007%" limit 2;


----ex6
cities/countries/languages/

1.
select c.name, l.language
from countries c
JOIN languages l ON c.code = l.country_code
WHERE independence_year = 1948;

2.
select name 
from countries 
join languages l1 on code = l1.country_code 
join languages l2 on code = l2.country_code 
where l1.language='English' and l1.official='T' 
and l2.language='French' and l2.official='T';

3. 
SELECT language,COUNT(language)
FROM languages l JOIN countries c ON l.country_code=c.code
WHERE life_expectancy>75
GROUP BY language
ORDER BY COUNT(language) DESC
LIMIT 5;

4.
SELECT name
FROM cities ct JOIN
(SELECT capital
FROM countries c
JOIN
(SELECT a.country_code
FROM (SELECT country_code FROM languages WHERE language='English')a
JOIN (SELECT country_code FROM languages WHERE language='Korean')b 
ON a.country_code=b.country_code) joined
WHERE c.code=joined.country_code) ctc ON ct.id=ctc.capital;

5.
SELECT name
FROM (SELECT country_code
FROM languages
WHERE official='T' AND percentage>20 AND percentage<50
)cc JOIN
cities c ON c.country_code = cc.country_code;

6.
SELECT SUM(surface_area)
FROM (SELECT code,name,surface_area,population FROM countries ORDER BY population DESC
LIMIT 5)sub ;

SELECT SUM(c.surface_area)
FROM countires c
JOIN cities ct ON ct.country_code = c.code
GROUP BY c.code
HAVING sum(population) > (SELECT sum(population) FROM countires c
JOIN cities ct ON ct.country_code = c.code
GROUP BY c.code)
ORDER BY sum(population) desc
LIMIT 5;


----ex7
1.
SELECT r.role 
FROM roles r
JOIN movies m ON r.movie_id = m.id
WHERE m.name = 'Pi';


2.
SELECT DISTINCT a.first_name, a.last_name
FROM actors a
JOIN roles r ON a.id = r.actor_id
JOIN movies m ON m.id = r.movie_id
GROUP BY a.id
HAVING count(a.id) > any (select count(a.id) FROM actors a
JOIN roles r ON a.id = r.actor_id
JOIN movies m ON m.id = r.movie_id
GROUP BY a.id)
ORDER BY count(a.id) DESC
LIMIT 7;

3.
SELECT d.first_name, d.last_name
FROM directors d
JOIN movies_directors md ON d.id=md.director_id
JOIN movies m ON m.id = md.movie_id
GROUP BY d.id
HAVING avg(m.rank) > ANY (SELECT avg(m.rank) FROM directors d
JOIN movies_directors md ON d.id=md.director_id
JOIN movies m ON m.id = md.movie_id
GROUP BY d.id )
ORDER BY avg(m.rank) DESC
LIMIT 3;

4.
SELECT d.first_name, d.last_name
FROM directors d
JOIN movies_directors md ON d.id=md.director_id
JOIN movies_genres mg ON mg.movie_id = md.movie_id
WHERE mg.genre = "Thriller"
GROUP BY d.id
HAVING count(d.id) > ANY (SELECT count(d.id)
FROM directors d
JOIN movies_directors md ON d.id=md.director_id
JOIN movies_genres mg ON mg.movie_id = md.movie_id
WHERE mg.genre = "Thriller"
GROUP BY d.id)
ORDER BY count(d.id) desc
limit 1;


